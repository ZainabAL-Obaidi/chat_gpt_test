{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      showFeedback: false,\n      feedback: '',\n      apiKey: 'sk-proj-Zv0MnRWWefMhgO8sFgBvT3BlbkFJeqNoG4kQO7etaOWFH03M' // Your OpenAI API key\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    }\n  },\n  created() {\n    this.fetchQuestion();\n  },\n  methods: {\n    fetchQuestion() {\n      axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: 'Generate a multiple-choice question.',\n        max_tokens: 50\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('API Response:', response.data);\n        const questionText = response.data.choices[0].text.trim();\n        const options = ['a)', 'b)', 'c)', 'd)'];\n        const question = {\n          text: questionText,\n          options: options,\n          answer: 'a'\n        };\n        this.questions.push(question);\n        console.log('Questions:', this.questions); // Verify questions array\n      }).catch(error => {\n        console.error('Error fetching question:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","QuestionComponent","FeedbackComponent","name","components","data","questions","currentQuestionIndex","showFeedback","feedback","apiKey","computed","question","created","fetchQuestion","methods","post","prompt","max_tokens","headers","then","response","console","log","questionText","choices","text","trim","options","answer","push","catch","error"],"sources":["/home/kurs/chatgpt-quiz-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Welcome to My Vue.js Quiz App!</h1>\n    <!-- Other components or content here -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\n\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent,\n  },\n\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      showFeedback: false,\n      feedback: '',\n      apiKey: 'sk-proj-Zv0MnRWWefMhgO8sFgBvT3BlbkFJeqNoG4kQO7etaOWFH03M', // Your OpenAI API key\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    },\n  },\n  created() {\n    this.fetchQuestion();\n  },\n  methods: {\n  fetchQuestion() {\n    axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n      prompt: 'Generate a multiple-choice question.',\n      max_tokens: 50,\n    }, {\n      headers: {\n        'Authorization': `Bearer ${this.apiKey}`,\n        'Content-Type': 'application/json',\n      },\n    })\n    .then(response => {\n      console.log('API Response:', response.data);\n      const questionText = response.data.choices[0].text.trim();\n      const options = ['a)', 'b)', 'c)', 'd)'];\n      const question = {\n        text: questionText,\n        options: options,\n        answer: 'a',\n      };\n      this.questions.push(question);\n      console.log('Questions:', this.questions); // Verify questions array\n    })\n    .catch(error => {\n      console.error('Error fetching question:', error);\n    });\n  },\n}\n\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n"],"mappings":";AAQA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,iBAAgB,MAAO,gCAAgC;AAC9D,OAAOC,iBAAgB,MAAO,gCAAgC;AAE9D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,iBAAiB;IACjBC;EACF,CAAC;EAEDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,oBAAoB,EAAE,CAAC;MACvBC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,0DAA0D,CAAE;IACtE,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACN,SAAS,CAAC,IAAI,CAACC,oBAAoB,CAAC;IAClD;EACF,CAAC;EACDM,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,aAAa,CAAC,CAAC;EACtB,CAAC;EACDC,OAAO,EAAE;IACTD,aAAaA,CAAA,EAAG;MACdd,KAAK,CAACgB,IAAI,CAAC,6DAA6D,EAAE;QACxEC,MAAM,EAAE,sCAAsC;QAC9CC,UAAU,EAAE;MACd,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,eAAe,EAAE,UAAU,IAAI,CAACT,MAAM,EAAE;UACxC,cAAc,EAAE;QAClB;MACF,CAAC,EACAU,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAAChB,IAAI,CAAC;QAC3C,MAAMmB,YAAW,GAAIH,QAAQ,CAAChB,IAAI,CAACoB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;QACzD,MAAMC,OAAM,GAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACxC,MAAMhB,QAAO,GAAI;UACfc,IAAI,EAAEF,YAAY;UAClBI,OAAO,EAAEA,OAAO;UAChBC,MAAM,EAAE;QACV,CAAC;QACD,IAAI,CAACvB,SAAS,CAACwB,IAAI,CAAClB,QAAQ,CAAC;QAC7BU,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACjB,SAAS,CAAC,EAAE;MAC7C,CAAC,EACAyB,KAAK,CAACC,KAAI,IAAK;QACdV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACJ;EACF;AAEA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}