{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelRadio as _vModelRadio, withDirectives as _withDirectives, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-027d3f92\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($props.question.text), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.question.options, (option, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"label\", null, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"radio\",\n      value: option.charAt(0),\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedAnswer = $event)\n    }, null, 8 /* PROPS */, _hoisted_1), [[_vModelRadio, $data.selectedAnswer]]), _createTextVNode(\" \" + _toDisplayString(option), 1 /* TEXT */)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submitAnswer && $options.submitAnswer(...args))\n  }, \"Submit Answer\")]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","question","text","_Fragment","_renderList","options","option","index","key","type","value","charAt","_cache","$event","$data","selectedAnswer","_hoisted_1","_createTextVNode","onClick","args","$options","submitAnswer"],"sources":["/home/kurs/chatgpt-quiz-app/src/components/QuestionComponent.vue"],"sourcesContent":["<template>\n    <div>\n      <h2>{{ question.text }}</h2>\n      <div>\n        <ul>\n          <li v-for=\"(option, index) in question.options\" :key=\"index\">\n            <label>\n              <input type=\"radio\" :value=\"option.charAt(0)\" v-model=\"selectedAnswer\">\n              {{ option }}\n            </label>\n          </li>\n        </ul>\n      </div>\n      <button @click=\"submitAnswer\">Submit Answer</button>\n    </div>\n  </template>\n  \n  <script>\n  export default {\n    props: ['question'],\n    data() {\n      return {\n        selectedAnswer: null,\n      };\n    },\n    methods: {\n      submitAnswer() {\n        if (this.selectedAnswer !== null) {\n          this.$emit('answer', this.selectedAnswer); // Emit selected answer to parent component (App.vue)\n          this.selectedAnswer = null; // Reset selected answer\n        } else {\n          alert('Please select an answer.');\n        }\n      },\n    },\n  };\n  </script>\n  \n  <style scoped>\n  ul {\n    list-style-type: none;\n    padding: 0;\n  }\n  li {\n    margin-bottom: 10px;\n  }\n  button {\n    margin-top: 10px;\n    padding: 10px 20px;\n    background-color: #007BFF;\n    color: white;\n    border: none;\n    cursor: pointer;\n    border-radius: 5px;\n  }\n  button:hover {\n    background-color: #0056b3;\n  }\n  </style>\n  "],"mappings":";;mBAAA;;uBACIA,mBAAA,CAaM,cAZJC,mBAAA,CAA4B,YAAAC,gBAAA,CAArBC,MAAA,CAAAC,QAAQ,CAACC,IAAI,kBACpBJ,mBAAA,CASM,cARJA,mBAAA,CAOK,c,kBANHD,mBAAA,CAKKM,SAAA,QAVfC,WAAA,CAKwCJ,MAAA,CAAAC,QAAQ,CAACI,OAAO,EALxD,CAKsBC,MAAM,EAAEC,KAAK;yBAAzBV,mBAAA,CAKK;MAL4CW,GAAG,EAAED;IAAK,IACzDT,mBAAA,CAGQ,gB,gBAFNA,mBAAA,CAAuE;MAAhEW,IAAI,EAAC,OAAO;MAAEC,KAAK,EAAEJ,MAAM,CAACK,MAAM;MAPvD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAOqEC,KAAA,CAAAC,cAAc,GAAAF,MAAA;4BAPnFG,UAAA,I,eAOqEF,KAAA,CAAAC,cAAc,E,GAPnFE,gBAAA,CAOqF,GACvE,GAAAlB,gBAAA,CAAGO,MAAM,iB;sCAKjBR,mBAAA,CAAoD;IAA3CoB,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAO,IAAA,KAAEC,QAAA,CAAAC,YAAA,IAAAD,QAAA,CAAAC,YAAA,IAAAF,IAAA,CAAY;KAAE,eAAa,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}