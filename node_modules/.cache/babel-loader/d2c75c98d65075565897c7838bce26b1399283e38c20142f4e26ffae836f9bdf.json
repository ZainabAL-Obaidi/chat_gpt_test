{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      showFeedback: false,\n      showStartButton: true,\n      feedback: '',\n      apiKey: 'your_openai_api_key_here' // Replace with your actual API key\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    }\n  },\n  methods: {\n    startQuiz() {\n      this.showStartButton = false;\n      this.fetchQuestion();\n    },\n    fetchQuestion() {\n      axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: 'Generate a multiple-choice question.',\n        max_tokens: 50\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        const questionText = response.data.choices[0].text.trim();\n        const options = ['a)', 'b)', 'c)', 'd)'];\n        const question = {\n          text: questionText,\n          options: options,\n          answer: 'a'\n        };\n        this.questions.push(question);\n        console.log('Questions:', this.questions); // Check if questions are correctly fetched\n      }).catch(error => {\n        console.error('Error fetching question:', error);\n      });\n    },\n    handleAnswer(selectedAnswer) {\n      if (selectedAnswer === this.question.answer) {\n        console.log('Correct!');\n      } else {\n        console.log('Incorrect!');\n      }\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showFeedback = true;\n        this.fetchFeedback();\n      }\n    },\n    fetchFeedback() {\n      // Simulating feedback for demo purposes\n      this.feedback = 'Good job! You completed the quiz.';\n    }\n  }\n};","map":{"version":3,"names":["axios","QuestionComponent","FeedbackComponent","name","components","data","questions","currentQuestionIndex","showFeedback","showStartButton","feedback","apiKey","computed","question","methods","startQuiz","fetchQuestion","post","prompt","max_tokens","headers","then","response","questionText","choices","text","trim","options","answer","push","console","log","catch","error","handleAnswer","selectedAnswer","length","fetchFeedback"],"sources":["/home/kurs/chatgpt-quiz-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Welcome to My Vue.js Quiz App!</h1>\n    <button v-if=\"showStartButton\" @click=\"startQuiz\">Start Quiz</button>\n    <div v-if=\"!showFeedback && !showStartButton\">\n      <QuestionComponent v-if=\"question\" :question=\"question\" @answer=\"handleAnswer\" />\n    </div>\n    <div v-else-if=\"showFeedback\">\n      <FeedbackComponent :feedback=\"feedback\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\n\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent,\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      showFeedback: false,\n      showStartButton: true,\n      feedback: '',\n      apiKey: 'your_openai_api_key_here', // Replace with your actual API key\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    },\n  },\n  methods: {\n    startQuiz() {\n      this.showStartButton = false;\n      this.fetchQuestion();\n    },\n    fetchQuestion() {\n      axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: 'Generate a multiple-choice question.',\n        max_tokens: 50,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(response => {\n        const questionText = response.data.choices[0].text.trim();\n        const options = ['a)', 'b)', 'c)', 'd)'];\n        const question = {\n          text: questionText,\n          options: options,\n          answer: 'a',\n        };\n        this.questions.push(question);\n        console.log('Questions:', this.questions); // Check if questions are correctly fetched\n      })\n      .catch(error => {\n        console.error('Error fetching question:', error);\n      });\n    },\n    handleAnswer(selectedAnswer) {\n      if (selectedAnswer === this.question.answer) {\n        console.log('Correct!');\n      } else {\n        console.log('Incorrect!');\n      }\n\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showFeedback = true;\n        this.fetchFeedback();\n      }\n    },\n    fetchFeedback() {\n      // Simulating feedback for demo purposes\n      this.feedback = 'Good job! You completed the quiz.';\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin-top: 20px;\n}\nbutton {\n  margin-top: 10px;\n  padding: 10px 20px;\n  background-color: #007BFF;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";AAcA,OAAOA,KAAI,MAAO,OAAO;AACzB,OAAOC,iBAAgB,MAAO,gCAAgC;AAC9D,OAAOC,iBAAgB,MAAO,gCAAgC;AAE9D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,iBAAiB;IACjBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,oBAAoB,EAAE,CAAC;MACvBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,IAAI;MACrBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,0BAA0B,CAAE;IACtC,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACP,SAAS,CAAC,IAAI,CAACC,oBAAoB,CAAC;IAClD;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACN,eAAc,GAAI,KAAK;MAC5B,IAAI,CAACO,aAAa,CAAC,CAAC;IACtB,CAAC;IACDA,aAAaA,CAAA,EAAG;MACdhB,KAAK,CAACiB,IAAI,CAAC,6DAA6D,EAAE;QACxEC,MAAM,EAAE,sCAAsC;QAC9CC,UAAU,EAAE;MACd,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,eAAe,EAAE,UAAU,IAAI,CAACT,MAAM,EAAE;UACxC,cAAc,EAAE;QAClB;MACF,CAAC,EACAU,IAAI,CAACC,QAAO,IAAK;QAChB,MAAMC,YAAW,GAAID,QAAQ,CAACjB,IAAI,CAACmB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC;QACzD,MAAMC,OAAM,GAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC;QACxC,MAAMd,QAAO,GAAI;UACfY,IAAI,EAAEF,YAAY;UAClBI,OAAO,EAAEA,OAAO;UAChBC,MAAM,EAAE;QACV,CAAC;QACD,IAAI,CAACtB,SAAS,CAACuB,IAAI,CAAChB,QAAQ,CAAC;QAC7BiB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAACzB,SAAS,CAAC,EAAE;MAC7C,CAAC,EACA0B,KAAK,CAACC,KAAI,IAAK;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC;IACDC,YAAYA,CAACC,cAAc,EAAE;MAC3B,IAAIA,cAAa,KAAM,IAAI,CAACtB,QAAQ,CAACe,MAAM,EAAE;QAC3CE,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACzB,OAAO;QACLD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAC3B;MAEA,IAAI,IAAI,CAACxB,oBAAmB,GAAI,IAAI,CAACD,SAAS,CAAC8B,MAAK,GAAI,CAAC,EAAE;QACzD,IAAI,CAAC7B,oBAAoB,EAAE;MAC7B,OAAO;QACL,IAAI,CAACC,YAAW,GAAI,IAAI;QACxB,IAAI,CAAC6B,aAAa,CAAC,CAAC;MACtB;IACF,CAAC;IACDA,aAAaA,CAAA,EAAG;MACd;MACA,IAAI,CAAC3B,QAAO,GAAI,mCAAmC;IACrD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}