{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock, createVNode as _createVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome to My Vue.js Quiz App!\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  key: 1\n};\nconst _hoisted_4 = {\n  key: 2\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_QuestionComponent = _resolveComponent(\"QuestionComponent\");\n  const _component_FeedbackComponent = _resolveComponent(\"FeedbackComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, $data.showStartButton ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startQuiz && $options.startQuiz(...args))\n  }, \"Start Quiz\")) : _createCommentVNode(\"v-if\", true), !$data.showFeedback && !$data.showStartButton ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, [$options.question ? (_openBlock(), _createBlock(_component_QuestionComponent, {\n    key: 0,\n    question: $options.question,\n    onAnswer: $options.handleAnswer\n  }, null, 8 /* PROPS */, [\"question\", \"onAnswer\"])) : _createCommentVNode(\"v-if\", true)])) : $data.showFeedback ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createVNode(_component_FeedbackComponent, {\n    feedback: $data.feedback\n  }, null, 8 /* PROPS */, [\"feedback\"])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["id","_createElementVNode","key","_createElementBlock","_hoisted_1","_hoisted_2","$data","showStartButton","onClick","_cache","args","$options","startQuiz","_createCommentVNode","showFeedback","_hoisted_3","question","_createBlock","_component_QuestionComponent","onAnswer","handleAnswer","_hoisted_4","_createVNode","_component_FeedbackComponent","feedback"],"sources":["/home/kurs/chatgpt-quiz-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Welcome to My Vue.js Quiz App!</h1>\n    <button v-if=\"showStartButton\" @click=\"startQuiz\">Start Quiz</button>\n    <div v-if=\"!showFeedback && !showStartButton\">\n      <QuestionComponent v-if=\"question\" :question=\"question\" @answer=\"handleAnswer\" />\n    </div>\n    <div v-else-if=\"showFeedback\">\n      <FeedbackComponent :feedback=\"feedback\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\n\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent,\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      showFeedback: false,\n      showStartButton: true,\n      feedback: '',\n      apiKey: 'your_openai_api_key_here', // Replace with your actual API key\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    },\n  },\n  methods: {\n    startQuiz() {\n      this.showStartButton = false;\n      this.fetchQuestion();\n    },\n    fetchQuestion() {\n      axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: 'Generate a multiple-choice question.',\n        max_tokens: 50,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(response => {\n        const questionText = response.data.choices[0].text.trim();\n        const options = ['a)', 'b)', 'c)', 'd)'];\n        const question = {\n          text: questionText,\n          options: options,\n          answer: 'a',\n        };\n        this.questions.push(question);\n        console.log('Questions:', this.questions); // Check if questions are correctly fetched\n      })\n      .catch(error => {\n        console.error('Error fetching question:', error);\n      });\n    },\n    handleAnswer(selectedAnswer) {\n      if (selectedAnswer === this.question.answer) {\n        console.log('Correct!');\n      } else {\n        console.log('Incorrect!');\n      }\n\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showFeedback = true;\n        this.fetchFeedback();\n      }\n    },\n    fetchFeedback() {\n      // Simulating feedback for demo purposes\n      this.feedback = 'Good job! You completed the quiz.';\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin-top: 20px;\n}\n</style>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin-top: 20px;\n}\nbutton {\n  margin-top: 10px;\n  padding: 10px 20px;\n  background-color: #007BFF;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;gCACXC,mBAAA,CAAuC,YAAnC,gCAA8B;;EAFtCC,GAAA;AAAA;;EAAAA,GAAA;AAAA;;;;uBACEC,mBAAA,CASM,OATNC,UASM,GARJC,UAAuC,EACzBC,KAAA,CAAAC,eAAe,I,cAA7BJ,mBAAA,CAAqE;IAHzED,GAAA;IAGoCM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,KAHhEG,mBAAA,gB,CAIgBP,KAAA,CAAAQ,YAAY,KAAKR,KAAA,CAAAC,eAAe,I,cAA5CJ,mBAAA,CAEM,OANVY,UAAA,GAK+BJ,QAAA,CAAAK,QAAQ,I,cAAjCC,YAAA,CAAiFC,4BAAA;IALvFhB,GAAA;IAK0Cc,QAAQ,EAAEL,QAAA,CAAAK,QAAQ;IAAGG,QAAM,EAAER,QAAA,CAAAS;uDALvEP,mBAAA,e,KAOoBP,KAAA,CAAAQ,YAAY,I,cAA5BX,mBAAA,CAEM,OATVkB,UAAA,GAQMC,YAAA,CAA0CC,4BAAA;IAAtBC,QAAQ,EAAElB,KAAA,CAAAkB;EAAQ,sC,KAR5CX,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}