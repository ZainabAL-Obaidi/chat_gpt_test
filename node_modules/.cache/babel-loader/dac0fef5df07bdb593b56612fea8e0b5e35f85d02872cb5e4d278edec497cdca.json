{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios'; // Import axios here\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      started: false,\n      showFeedback: false,\n      feedback: '',\n      apiKey: 'sk-proj-Zv0MnRWWefMhgO8sFgBvT3BlbkFJeqNoG4kQO7etaOWFH03M'\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    }\n  },\n  methods: {\n    startQuiz() {\n      this.started = true;\n      this.fetchQuestion();\n    },\n    fetchQuestion() {\n      axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: 'Generate a multiple-choice question.',\n        max_tokens: 50\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json'\n        }\n      }).then(response => {\n        console.log('API Response:', response.data);\n        const questionText = response.data.choices[0].text.trim(); // Extract the generated question\n        const options = ['a)', 'b)', 'c)', 'd)']; // Predefined options for simplicity\n        const question = {\n          text: questionText,\n          options: options,\n          answer: 'a' // Assuming the correct answer is always the first option for simplicity\n        };\n        this.questions.push(question);\n        console.log('Questions:', this.questions); // Verify questions array\n      }).catch(error => {\n        console.error('Error fetching question:', error);\n      });\n    },\n    handleAnswer(selectedAnswer) {\n      // Check if answer is correct (for demonstration purposes)\n      if (selectedAnswer === this.question.answer) {\n        console.log('Correct!');\n      } else {\n        console.log('Incorrect!');\n      }\n\n      // Move to the next question or show feedback if all questions are answered\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showFeedback = true;\n        this.fetchFeedback(); // Fetch feedback when all questions are answered\n      }\n    },\n    fetchFeedback() {\n      // Simulating fetching feedback from an API (can be replaced with actual API call)\n      // In this simplified example, feedback is hardcoded\n      this.feedback = \"Good job! You answered all questions.\";\n    }\n  }\n};","map":{"version":3,"names":["axios","QuestionComponent","FeedbackComponent","name","components","data","questions","currentQuestionIndex","started","showFeedback","feedback","apiKey","computed","question","methods","startQuiz","fetchQuestion","post","prompt","max_tokens","headers","then","response","console","log","questionText","choices","text","trim","options","answer","push","catch","error","handleAnswer","selectedAnswer","length","fetchFeedback"],"sources":["/home/kurs/chatgpt-quiz-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div v-if=\"!started\">\n      <h1>Welcome to My Vue.js Quiz App!</h1>\n      <p>Here you can take a quiz powered by OpenAI's GPT-3 to answer multiple-choice questions.</p>\n      <button @click=\"startQuiz\">Start Quiz</button>\n    </div>\n    <div v-else>\n      <QuestionComponent v-if=\"question\" :question=\"question\" @answer=\"handleAnswer\" />\n      <FeedbackComponent v-if=\"showFeedback\" :feedback=\"feedback\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Import axios here\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\n\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent,\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      started: false,\n      showFeedback: false,\n      feedback: '',\n      apiKey: 'sk-proj-Zv0MnRWWefMhgO8sFgBvT3BlbkFJeqNoG4kQO7etaOWFH03M',\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    },\n  },\n  methods: {\n    startQuiz() {\n      this.started = true;\n      this.fetchQuestion();\n    },\n    fetchQuestion() {\n      axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: 'Generate a multiple-choice question.',\n        max_tokens: 50,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(response => {\n        console.log('API Response:', response.data);\n        const questionText = response.data.choices[0].text.trim(); // Extract the generated question\n        const options = ['a)', 'b)', 'c)', 'd)']; // Predefined options for simplicity\n        const question = {\n          text: questionText,\n          options: options,\n          answer: 'a', // Assuming the correct answer is always the first option for simplicity\n        };\n        this.questions.push(question);\n        console.log('Questions:', this.questions); // Verify questions array\n      })\n      .catch(error => {\n        console.error('Error fetching question:', error);\n      });\n    },\n    handleAnswer(selectedAnswer) {\n      // Check if answer is correct (for demonstration purposes)\n      if (selectedAnswer === this.question.answer) {\n        console.log('Correct!');\n      } else {\n        console.log('Incorrect!');\n      }\n\n      // Move to the next question or show feedback if all questions are answered\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showFeedback = true;\n        this.fetchFeedback(); // Fetch feedback when all questions are answered\n      }\n    },\n    fetchFeedback() {\n      // Simulating fetching feedback from an API (can be replaced with actual API call)\n      // In this simplified example, feedback is hardcoded\n      this.feedback = \"Good job! You answered all questions.\";\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin-top: 20px;\n}\nbutton {\n  margin-top: 10px;\n  padding: 10px 20px;\n  background-color: #007BFF;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";AAeA,OAAOA,KAAI,MAAO,OAAO,EAAE;AAC3B,OAAOC,iBAAgB,MAAO,gCAAgC;AAC9D,OAAOC,iBAAgB,MAAO,gCAAgC;AAE9D,eAAe;EACbC,IAAI,EAAE,KAAK;EACXC,UAAU,EAAE;IACVH,iBAAiB;IACjBC;EACF,CAAC;EACDG,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE,EAAE;MACbC,oBAAoB,EAAE,CAAC;MACvBC,OAAO,EAAE,KAAK;MACdC,YAAY,EAAE,KAAK;MACnBC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE;IACV,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,QAAQA,CAAA,EAAG;MACT,OAAO,IAAI,CAACP,SAAS,CAAC,IAAI,CAACC,oBAAoB,CAAC;IAClD;EACF,CAAC;EACDO,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACP,OAAM,GAAI,IAAI;MACnB,IAAI,CAACQ,aAAa,CAAC,CAAC;IACtB,CAAC;IACDA,aAAaA,CAAA,EAAG;MACdhB,KAAK,CAACiB,IAAI,CAAC,6DAA6D,EAAE;QACxEC,MAAM,EAAE,sCAAsC;QAC9CC,UAAU,EAAE;MACd,CAAC,EAAE;QACDC,OAAO,EAAE;UACP,eAAe,EAAE,UAAU,IAAI,CAACT,MAAM,EAAE;UACxC,cAAc,EAAE;QAClB;MACF,CAAC,EACAU,IAAI,CAACC,QAAO,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,QAAQ,CAACjB,IAAI,CAAC;QAC3C,MAAMoB,YAAW,GAAIH,QAAQ,CAACjB,IAAI,CAACqB,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI,CAACC,IAAI,CAAC,CAAC,EAAE;QAC3D,MAAMC,OAAM,GAAI,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAAE;QAC1C,MAAMhB,QAAO,GAAI;UACfc,IAAI,EAAEF,YAAY;UAClBI,OAAO,EAAEA,OAAO;UAChBC,MAAM,EAAE,GAAG,CAAE;QACf,CAAC;QACD,IAAI,CAACxB,SAAS,CAACyB,IAAI,CAAClB,QAAQ,CAAC;QAC7BU,OAAO,CAACC,GAAG,CAAC,YAAY,EAAE,IAAI,CAAClB,SAAS,CAAC,EAAE;MAC7C,CAAC,EACA0B,KAAK,CAACC,KAAI,IAAK;QACdV,OAAO,CAACU,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD,CAAC,CAAC;IACJ,CAAC;IACDC,YAAYA,CAACC,cAAc,EAAE;MAC3B;MACA,IAAIA,cAAa,KAAM,IAAI,CAACtB,QAAQ,CAACiB,MAAM,EAAE;QAC3CP,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACzB,OAAO;QACLD,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;MAC3B;;MAEA;MACA,IAAI,IAAI,CAACjB,oBAAmB,GAAI,IAAI,CAACD,SAAS,CAAC8B,MAAK,GAAI,CAAC,EAAE;QACzD,IAAI,CAAC7B,oBAAoB,EAAE;MAC7B,OAAO;QACL,IAAI,CAACE,YAAW,GAAI,IAAI;QACxB,IAAI,CAAC4B,aAAa,CAAC,CAAC,EAAE;MACxB;IACF,CAAC;IACDA,aAAaA,CAAA,EAAG;MACd;MACA;MACA,IAAI,CAAC3B,QAAO,GAAI,uCAAuC;IACzD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}