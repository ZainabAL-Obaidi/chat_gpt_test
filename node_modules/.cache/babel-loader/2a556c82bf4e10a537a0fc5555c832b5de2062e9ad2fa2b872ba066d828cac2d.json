{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Welcome to My Vue.js Quiz App!\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Here you can take a quiz powered by OpenAI's GPT-3 to answer multiple-choice questions.\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_QuestionComponent = _resolveComponent(\"QuestionComponent\");\n  const _component_FeedbackComponent = _resolveComponent(\"FeedbackComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [!$data.started ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _hoisted_4, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.startQuiz && $options.startQuiz(...args))\n  }, \"Start Quiz\")])) : (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [$options.question ? (_openBlock(), _createBlock(_component_QuestionComponent, {\n    key: 0,\n    question: $options.question,\n    onAnswer: $options.handleAnswer\n  }, null, 8 /* PROPS */, [\"question\", \"onAnswer\"])) : _createCommentVNode(\"v-if\", true), $data.showFeedback ? (_openBlock(), _createBlock(_component_FeedbackComponent, {\n    key: 1,\n    feedback: $data.feedback\n  }, null, 8 /* PROPS */, [\"feedback\"])) : _createCommentVNode(\"v-if\", true)]))]);\n}","map":{"version":3,"names":["id","key","_createElementVNode","_createElementBlock","_hoisted_1","$data","started","_hoisted_2","_hoisted_3","_hoisted_4","onClick","_cache","args","$options","startQuiz","_hoisted_5","question","_createBlock","_component_QuestionComponent","onAnswer","handleAnswer","_createCommentVNode","showFeedback","_component_FeedbackComponent","feedback"],"sources":["/home/kurs/chatgpt-quiz-app/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div v-if=\"!started\">\n      <h1>Welcome to My Vue.js Quiz App!</h1>\n      <p>Here you can take a quiz powered by OpenAI's GPT-3 to answer multiple-choice questions.</p>\n      <button @click=\"startQuiz\">Start Quiz</button>\n    </div>\n    <div v-else>\n      <QuestionComponent v-if=\"question\" :question=\"question\" @answer=\"handleAnswer\" />\n      <FeedbackComponent v-if=\"showFeedback\" :feedback=\"feedback\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Import axios here\nimport QuestionComponent from './components/QuestionComponent';\nimport FeedbackComponent from './components/FeedbackComponent';\n\nexport default {\n  name: 'App',\n  components: {\n    QuestionComponent,\n    FeedbackComponent,\n  },\n  data() {\n    return {\n      questions: [],\n      currentQuestionIndex: 0,\n      started: false,\n      showFeedback: false,\n      feedback: '',\n      apiKey: 'sk-proj-Zv0MnRWWefMhgO8sFgBvT3BlbkFJeqNoG4kQO7etaOWFH03M',\n    };\n  },\n  computed: {\n    question() {\n      return this.questions[this.currentQuestionIndex];\n    },\n  },\n  methods: {\n    startQuiz() {\n      this.started = true;\n      this.fetchQuestion();\n    },\n    fetchQuestion() {\n      axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: 'Generate a multiple-choice question.',\n        max_tokens: 50,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${this.apiKey}`,\n          'Content-Type': 'application/json',\n        },\n      })\n      .then(response => {\n        console.log('API Response:', response.data);\n        const questionText = response.data.choices[0].text.trim(); // Extract the generated question\n        const options = ['a)', 'b)', 'c)', 'd)']; // Predefined options for simplicity\n        const question = {\n          text: questionText,\n          options: options,\n          answer: 'a', // Assuming the correct answer is always the first option for simplicity\n        };\n        this.questions.push(question);\n        console.log('Questions:', this.questions); // Verify questions array\n      })\n      .catch(error => {\n        console.error('Error fetching question:', error);\n      });\n    },\n    handleAnswer(selectedAnswer) {\n      // Check if answer is correct (for demonstration purposes)\n      if (selectedAnswer === this.question.answer) {\n        console.log('Correct!');\n      } else {\n        console.log('Incorrect!');\n      }\n\n      // Move to the next question or show feedback if all questions are answered\n      if (this.currentQuestionIndex < this.questions.length - 1) {\n        this.currentQuestionIndex++;\n      } else {\n        this.showFeedback = true;\n        this.fetchFeedback(); // Fetch feedback when all questions are answered\n      }\n    },\n    fetchFeedback() {\n      // Simulating fetching feedback from an API (can be replaced with actual API call)\n      // In this simplified example, feedback is hardcoded\n      this.feedback = \"Good job! You answered all questions.\";\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n  margin-top: 20px;\n}\nbutton {\n  margin-top: 10px;\n  padding: 10px 20px;\n  background-color: #007BFF;\n  color: white;\n  border: none;\n  cursor: pointer;\n  border-radius: 5px;\n}\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;EADfC,GAAA;AAAA;gCAGMC,mBAAA,CAAuC,YAAnC,gCAA8B;gCAClCA,mBAAA,CAA8F,WAA3F,yFAAuF;;EAJhGD,GAAA;AAAA;;;;uBACEE,mBAAA,CAUM,OAVNC,UAUM,G,CATQC,KAAA,CAAAC,OAAO,I,cAAnBH,mBAAA,CAIM,OANVI,UAAA,GAGMC,UAAuC,EACvCC,UAA8F,EAC9FP,mBAAA,CAA8C;IAArCQ,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;KAAE,YAAU,E,oBAEvCT,mBAAA,CAGM,OAVVY,UAAA,GAQ+BF,QAAA,CAAAG,QAAQ,I,cAAjCC,YAAA,CAAiFC,4BAAA;IARvFjB,GAAA;IAQ0Ce,QAAQ,EAAEH,QAAA,CAAAG,QAAQ;IAAGG,QAAM,EAAEN,QAAA,CAAAO;uDARvEC,mBAAA,gBAS+BhB,KAAA,CAAAiB,YAAY,I,cAArCL,YAAA,CAA8DM,4BAAA;IATpEtB,GAAA;IAS8CuB,QAAQ,EAAEnB,KAAA,CAAAmB;2CATxDH,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}